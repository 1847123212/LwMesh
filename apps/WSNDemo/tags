!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APP_ADDR	config.h	49;"	d
APP_CAPTION	WSNDemo.c	64;"	d	file:
APP_CAPTION	WSNDemo.c	68;"	d	file:
APP_CAPTION	WSNDemo.c	72;"	d	file:
APP_CAPTION_SIZE	WSNDemo.c	77;"	d	file:
APP_CHANNEL	config.h	50;"	d
APP_COORDINATOR	WSNDemo.c	66;"	d	file:
APP_ENDDEVICE	WSNDemo.c	74;"	d	file:
APP_ENDPOINT	config.h	53;"	d
APP_NODE_TYPE	WSNDemo.c	65;"	d	file:
APP_NODE_TYPE	WSNDemo.c	69;"	d	file:
APP_NODE_TYPE	WSNDemo.c	73;"	d	file:
APP_OTA_ENDPOINT	config.h	54;"	d
APP_PANID	config.h	51;"	d
APP_ROUTER	WSNDemo.c	70;"	d	file:
APP_SECURITY_KEY	config.h	55;"	d
APP_SENDING_INTERVAL	config.h	52;"	d
APP_STATE_INITIAL	WSNDemo.c	/^  APP_STATE_INITIAL,$/;"	e	enum:AppState_t	file:
APP_STATE_PREPARE_TO_SLEEP	WSNDemo.c	/^  APP_STATE_PREPARE_TO_SLEEP,$/;"	e	enum:AppState_t	file:
APP_STATE_SEND	WSNDemo.c	/^  APP_STATE_SEND,$/;"	e	enum:AppState_t	file:
APP_STATE_SENDING_DONE	WSNDemo.c	/^  APP_STATE_SENDING_DONE,$/;"	e	enum:AppState_t	file:
APP_STATE_SLEEP	WSNDemo.c	/^  APP_STATE_SLEEP,$/;"	e	enum:AppState_t	file:
APP_STATE_WAIT_CONF	WSNDemo.c	/^  APP_STATE_WAIT_CONF,$/;"	e	enum:AppState_t	file:
APP_STATE_WAIT_SEND_TIMER	WSNDemo.c	/^  APP_STATE_WAIT_SEND_TIMER,$/;"	e	enum:AppState_t	file:
APP_STATE_WAKEUP	WSNDemo.c	/^  APP_STATE_WAKEUP,$/;"	e	enum:AppState_t	file:
APP_TaskHandler	WSNDemo.c	/^static void APP_TaskHandler(void)$/;"	f	file:
AppMessage_t	WSNDemo.c	/^typedef struct AppMessage_t$/;"	s	file:
AppMessage_t	WSNDemo.c	/^} AppMessage_t;$/;"	t	typeref:struct:AppMessage_t	file:
AppState_t	WSNDemo.c	/^typedef enum AppState_t$/;"	g	file:
AppState_t	WSNDemo.c	/^} AppState_t;$/;"	t	typeref:enum:AppState_t	file:
HAL_ENABLE_UART	config.h	74;"	d
HAL_UART_CHANNEL	config.h	75;"	d
HAL_UART_RX_FIFO_SIZE	config.h	76;"	d
HAL_UART_TX_FIFO_SIZE	config.h	77;"	d
HAL_UartBytesReceived	WSNDemo.c	/^void HAL_UartBytesReceived(uint16_t bytes)$/;"	f
IAP_SWITCH_HANDLER	otaInterface.c	52;"	d	file:
IAP_WRITE_PAGE_HANDLER	otaInterface.c	53;"	d	file:
IapSwitch_t	otaInterface.c	/^typedef void (*IapSwitch_t)(void);$/;"	t	file:
IapWritePage_t	otaInterface.c	/^typedef void (*IapWritePage_t)(uint32_t addr, uint16_t *buf);$/;"	t	file:
LED_DATA	WSNDemo.c	80;"	d	file:
LED_NETWORK	WSNDemo.c	79;"	d	file:
NWK_ACK_WAIT_TIME	config.h	69;"	d
NWK_BUFFERS_AMOUNT	config.h	63;"	d
NWK_DUPLICATE_REJECTION_TABLE_SIZE	config.h	65;"	d
NWK_DUPLICATE_REJECTION_TTL	config.h	66;"	d
NWK_ENABLE_ROUTING	config.h	71;"	d
NWK_MAX_ENDPOINTS_AMOUNT	config.h	64;"	d
NWK_ROUTE_DEFAULT_SCORE	config.h	68;"	d
NWK_ROUTE_TABLE_SIZE	config.h	67;"	d
OTA_ClientBlockIndication	otaInterface.c	/^void OTA_ClientBlockIndication(uint8_t size, uint8_t *data)$/;"	f
OTA_ClientNotification	otaInterface.c	/^void OTA_ClientNotification(OTA_Status_t status)$/;"	f
PHY_RandomConf	WSNDemo.c	/^void PHY_RandomConf(uint16_t rnd)$/;"	f
STARTING_ADDRESS	otaInterface.c	51;"	d	file:
SYS_SECURITY_MODE	config.h	61;"	d
_CONFIG_H_	config.h	45;"	d
_LEDS_H_	leds.h	45;"	d
appDataConf	WSNDemo.c	/^static void appDataConf(NWK_DataReq_t *req)$/;"	f	file:
appDataInd	WSNDemo.c	/^static bool appDataInd(NWK_DataInd_t *ind)$/;"	f	file:
appDataSendingTimer	WSNDemo.c	/^static SYS_Timer_t appDataSendingTimer;$/;"	v	file:
appDataSendingTimerHandler	WSNDemo.c	/^static void appDataSendingTimerHandler(SYS_Timer_t *timer)$/;"	f	file:
appGetIapHandler	otaInterface.c	/^static void *appGetIapHandler(uint32_t addr)$/;"	f	file:
appInit	WSNDemo.c	/^static void appInit(void)$/;"	f	file:
appNetworkStatus	WSNDemo.c	/^static bool appNetworkStatus;$/;"	v	file:
appNetworkStatusTimer	WSNDemo.c	/^static SYS_Timer_t appNetworkStatusTimer;$/;"	v	file:
appNetworkStatusTimerHandler	WSNDemo.c	/^static void appNetworkStatusTimerHandler(SYS_Timer_t *timer)$/;"	f	file:
appOtaAddr	otaInterface.c	/^static uint32_t appOtaAddr;$/;"	v	file:
appOtaPage	otaInterface.c	/^static uint8_t appOtaPage[SYS_PAGE_SIZE];$/;"	v	file:
appOtaSize	otaInterface.c	/^static uint16_t appOtaSize;$/;"	v	file:
appSendData	WSNDemo.c	/^static void appSendData(void)$/;"	f	file:
appSendMessage	WSNDemo.c	/^static void appSendMessage(uint8_t *data, uint8_t size)$/;"	f	file:
appState	WSNDemo.c	/^static AppState_t appState = APP_STATE_INITIAL;$/;"	v	file:
appSwitch	otaInterface.c	/^static void appSwitch(void)$/;"	f	file:
appUpgradeInProgress	otaInterface.c	/^static bool appUpgradeInProgress = false;$/;"	v	file:
appWritePage	otaInterface.c	/^static void appWritePage(void)$/;"	f	file:
battery	WSNDemo.c	/^    int32_t   battery;$/;"	m	struct:AppMessage_t::__anon1	file:
caption	WSNDemo.c	/^  } caption;$/;"	m	struct:AppMessage_t	typeref:struct:AppMessage_t::__anon2	file:
channelMask	WSNDemo.c	/^  uint32_t    channelMask;$/;"	m	struct:AppMessage_t	file:
extAddr	WSNDemo.c	/^  uint64_t    extAddr;$/;"	m	struct:AppMessage_t	file:
ledOff	leds.h	/^INLINE void ledOff(uint8_t i)$/;"	f
ledOn	leds.h	/^INLINE void ledOn(uint8_t i)$/;"	f
ledToggle	leds.h	/^INLINE void ledToggle(uint8_t i)$/;"	f
ledsClose	leds.h	/^INLINE void ledsClose(void)$/;"	f
ledsInit	leds.h	/^INLINE void ledsInit(void)$/;"	f
light	WSNDemo.c	/^    int32_t   light;$/;"	m	struct:AppMessage_t::__anon1	file:
lqi	WSNDemo.c	/^  uint8_t     lqi;$/;"	m	struct:AppMessage_t	file:
main	WSNDemo.c	/^int main(void)$/;"	f
messageType	WSNDemo.c	/^  uint8_t     messageType;$/;"	m	struct:AppMessage_t	file:
msg	WSNDemo.c	/^static AppMessage_t msg;$/;"	v	file:
nodeType	WSNDemo.c	/^  uint8_t     nodeType;$/;"	m	struct:AppMessage_t	file:
nwkDataReq	WSNDemo.c	/^static NWK_DataReq_t nwkDataReq;$/;"	v	file:
panId	WSNDemo.c	/^  uint16_t    panId;$/;"	m	struct:AppMessage_t	file:
parentShortAddr	WSNDemo.c	/^  uint16_t    parentShortAddr;$/;"	m	struct:AppMessage_t	file:
rssi	WSNDemo.c	/^  int8_t      rssi;$/;"	m	struct:AppMessage_t	file:
sensors	WSNDemo.c	/^  } sensors;$/;"	m	struct:AppMessage_t	typeref:struct:AppMessage_t::__anon1	file:
shortAddr	WSNDemo.c	/^  uint16_t    shortAddr;$/;"	m	struct:AppMessage_t	file:
size	WSNDemo.c	/^    uint8_t   size;$/;"	m	struct:AppMessage_t::__anon1	file:
size	WSNDemo.c	/^    uint8_t   size;$/;"	m	struct:AppMessage_t::__anon2	file:
softVersion	WSNDemo.c	/^  uint32_t    softVersion;$/;"	m	struct:AppMessage_t	file:
temperature	WSNDemo.c	/^    int32_t   temperature;$/;"	m	struct:AppMessage_t::__anon1	file:
text	WSNDemo.c	/^    char      text[APP_CAPTION_SIZE];$/;"	m	struct:AppMessage_t::__anon2	file:
type	WSNDemo.c	/^    uint8_t   type;$/;"	m	struct:AppMessage_t::__anon1	file:
type	WSNDemo.c	/^    uint8_t   type;$/;"	m	struct:AppMessage_t::__anon2	file:
workingChannel	WSNDemo.c	/^  uint8_t     workingChannel;$/;"	m	struct:AppMessage_t	file:
